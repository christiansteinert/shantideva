name: Build Cordova App for iOS

on:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Xcode
      #run: |
      #  ls /Applications/Xcode*
      #  xcode-select -p
      #  xcode-select -s /Applications/Xcode_14.2.app/Contents/Developer
      #  xcode-select -p
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Install Node.js and npm
      uses: actions/setup-node@v2
      with:
        node-version: '18.x'

    - name: Install Cordova
      run: |
        npm install -g cordova@12.0.0

    - name: Prepare application files
      run: |
        # copy files from web application directory 
        rm -rf app/shantideva-phonegap/www/*
        cp -rv src/web/* app/shantideva-phonegap/www/
        rm -rf app/shantideva-phonegap/www/lib/jquery-ui-1.12.1.custom/debug
        rm app/shantideva-phonegap/www/css/*.ttf
        rm app/shantideva-phonegap/www/css/*.woff2
        rm app/shantideva-phonegap/www/favicon*.png

    - name: Install dependencies
      run: |
        cd app/shantideva-phonegap/

        npm install
        npm install cordova-ios
        cordova platform remove ios
        cordova platform add ios@latest

    - name: Add / update cordova plugins
      run: |
        cd app/shantideva-phonegap/

        cordova plugin remove de.christiansteinert.dailyversesplugin
        rm node_modules/de-christian_steinert-shantideva_verses
        cordova plugin add ../../src/phonegap-plugin/DailyVersesPlugin
        # cordova plugin remove cordova-plugin-inappbrowser
        # cordova plugin add cordova-plugincordova-plugin-wkwebview-engine-inappbrowser@latest

    - name: Fix iOS bundle ID
      run: |
        cd app/shantideva-phonegap/

        sed -i".bak" 's/de.christian_steinert.shantideva_verses/de.christiansteinert.shantidevaverses/g' config.xml

    - name: Import code signing profile 
      #env:
        #IOSDISTRIBUTIONCERTIFICATE_BASE64: "${{ secrets.SHANTIDEVAIOSDISTRIBUTIONCERTIFICATE_BASE64 }}"
      #run: |
        #cd app/shantideva-phonegap/
        #security cms -D -i ~/'Library/MobileDevice/Provisioning Profiles/${{ secrets.SHANTIDEVAPROVISIONINGPROFILEID }}.mobileprovision'
        #echo "$IOSDISTRIBUTIONCERTIFICATE_BASE64" | base64 -d > ios_distribution.p12
        #security create-keychain -p "" build.keychain
        #security set-keychain-settings build.keychain  
        #security list-keychains -s build.keychain
        #security default-keychain -s build.keychain
        #security unlock-keychain -p "" build.keychain
        #security import ios_distribution.p12 -A -P '${{ secrets.SHANTIDEVAIOSDISTRIBUTIONCERTIFICATE_PASSPHRASE }}' -k build.keychain -T /usr/bin/codesign 
        #security set-key-partition-list -S apple-tool:,apple: -s -k '${{ secrets.SHANTIDEVAIOSDISTRIBUTIONCERTIFICATE_PASSPHRASE }}' build.keychain
        #
        #security find-identity -p codesigning
      uses: apple-actions/import-codesign-certs@v2
      with: 
        p12-file-base64: ${{ secrets.SHANTIDEVAIOSDISTRIBUTIONCERTIFICATE_BASE64 }}
        p12-password: ${{ secrets.SHANTIDEVAIOSDISTRIBUTIONCERTIFICATE_PASSPHRASE }}

    - name: Provide provisioning profile
      env:
        PROVISIONINGPROFILE_BASE64: "${{ secrets.SHANTIDEVAPROVISIONINGPROFILE_BASE64 }}"
      run: |
        cd app/shantideva-phonegap/

        mkdir -p ~/'Library/MobileDevice/Provisioning Profiles'
        echo "$PROVISIONINGPROFILE_BASE64" | base64 -d > ~/'Library/MobileDevice/Provisioning Profiles/${{ secrets.SHANTIDEVAPROVISIONINGPROFILEID }}.mobileprovision'

    - name: Build cordova app
      run: |
        cd app/shantideva-phonegap/

        cordova build ios --release --device --codeSignIdentity="iPhone Distribution: Berzin Archives e.V. (${{ secrets.APPSTORECONNECTDEVELOPMENTTEAMID }})" --developmentTeam="${{ secrets.APPSTORECONNECTDEVELOPMENTTEAMID }}" --packageType=app-store --provisioningProfile="${{ secrets.SHANTIDEVAPROVISIONINGPROFILEID }}"
     
    - name: Publish to App Store Connect
      run: |
        cd app/shantideva-phonegap/

        # extract version number from config.xml
        APP_VERSION=`cat config.xml |grep 'version=".*"' |sed 's/.*version="\([^"]*\)".*/\1/'`

        # get target path for the .ipa app file
        OUTPUT_PATH='/Users/runner/work/shantideva/shantideva/app/shantideva-phonegap/platforms/ios/build/Release-iphoneos'

        # store private key for authenticating against app store connect
        mkdir private_keys
        echo '${{ secrets.APPSTORECONNECTPRIVATEKEY }}' > private_keys/AuthKey_${{ secrets.APPSTORECONNECTKEYID }}.p8
        
        # publish the .ipa file
        xcrun altool --upload-package "${OUTPUT_PATH}/Shantideva.ipa" --type ios --apiKey ${{ secrets.APPSTORECONNECTKEYID }} --apiIssuer '${{ secrets.APPSTORECONNECTISSUERID }}' --apple-id ${{ secrets.APPLEID }} --bundle-id de.christiansteinert.shantidevaverses --bundle-version $APP_VERSION --bundle-short-version-string $APP_VERSION

    - name: Cleanup
      if: always()
      run: |
        cd app/shantideva-phonegap
        rm -rf private_keys *.p12 *.keychain "~/Library/MobileDevice/Provisioning Profiles"
